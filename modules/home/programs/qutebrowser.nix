{ config, lib, pkgs, ... }:

with lib;

let
  cfg = config.programs.qutebrowser;
  configFile = ''
    ${cfg.extraConfig}
  '';
in {
  options.programs.qutebrowser = {
    enable = mkOption {
      type = types.bool;
      default = false;
      example = true;
      description = ''
        Whether to enable the qutebrowser web browser.
      '';
    };

    extraConfig = mkOption {
      type = types.lines;
      default = "";
      description = ''
        Extra lines added to the config.py configuration file.
      '';
    };

    package = mkOption {
      type = types.package;
      default = pkgs.qutebrowser;
      defaultText = "pkgs.qutebrowser";
      description = "The qutebrowser derivation to use.";
    };
  };

  config = mkIf cfg.enable {
    home.packages = [ pkgs.qutebrowser ];

    xdg.configFile."qutebrowser/config.py".text =
      ''
        # Generated by Home Manager
      ''
      + configFile;
  };
}
