#+TITLE: nix-config
Configuration for NixOS and user home (dot files).

* Usage
Switch both system (NixOS) and home:
#+BEGIN_SRC sh
nix-shell --run switch-nixos
#+end_src

Switch home only:
#+BEGIN_SRC sh
nix-shell --run switch-home
#+end_src

Update the upstream sources:
#+BEGIN_SRC sh
nix-shell --run update-all-sources

nix-shell --run update-dotfile-sources
nix-shell --run update-emacs-sources
nix-shell --run update-nix-sources
#+end_src

* Development
The available search paths and their defaults are:
- =nixpkgsPath= :: =./external/nixpkgs=
- =overlaysPath= :: =./overlays=
- =nixosConfigPath= :: =./configuration.nix=
- =dotfilesPath= :: =./external/dotfiles=
- =emacsConfigPath= :: =./external/emacs.d=
- =homeManagerPath= :: =./external/home-manager=
- =homeManagerConfigPath= :: =./config/home.nix=
- =privateDataPath= :: =./private/data.nix=

Run with local version of search paths:
#+begin_src sh
nix-shell --argstr dotfilesPath ../dotfiles
#+end_src

* Tasks
** TODO Extract some inline stuff into external files
** TODO Migrate all tasks to nix-shell
** TODO Manage programs.sqlite via configuration.nix
[[https://discourse.nixos.org/t/specifying-unstable-commit-directly-in-configuration-nix/3366][NixOS Discourse: Specifying unstable commit directly in configuration.nix]]
** TODO Compile elisp files
#+begin_src nix
emacsConfig =
  configFile."emacs-config".source = let
    emacsBatch = "${pkgs.emacs}/bin/emacs -batch -q -no-site-file"
  in pkgs.runCommand "init.EC" {} ''
    cp ${<emacs-config/init.org>} init.org
    ${emacsBatch} ./init.org -f org-babel-tangle
    ${emacsBatch} -f batch-byte-compile ./init.el
    mv init.el* $out
  '';
#+end_src
** TODO Configure nix GC via service
#+begin_src nix
nix.gc.automatic = true;
nix.gc.dates = "12:12";
#+end_src
** TODO Ability to pin nixpkgs? as alternative to the submodule
** TODO Auto-load host configuration instead of relying on symlink?
** TODO Backup helper
** TODO GC helpers?
